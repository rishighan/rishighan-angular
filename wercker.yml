# This references the default nodejs container from
# the Docker Hub: https://registry.hub.docker.com/_/node/
# If you want Nodesource's container you would reference nodesource/node
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: frishi/docker-node:4.2.0 
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  steps:
    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"
    # install deps
    - npm-install
    - script:
        name: bower install
        code: |
          npm i -g bower
          bower i --config.interactive=false --allow-root
    #install phantomjs
    - aussiegeek/install-phantomjs@0.0.4
    # run tests
    - npm-test
    - script: 
        name: 'build distribution'
        code: webpack --config webpack.config.js
deploy:
  steps:
    - npm-install
    - script:
        name: "install pm2"
        code: "npm i pm2 -g"
   
    - internal/docker-push:
      username: $DOCKER_USERNAME
      password: $DOCKER_PASSWORD
      repository: $DOCKER_USERNAME/$DOCKER_IMAGE
      ports: "8080"
      cmd: '/bin/bash -c "cd /pipeline/source && pm2 start --no-daemon --env production rgapp-pm2.json"'

    - add-ssh-key:
        keyname: DIGITALOCEAN
    - add-to-known_hosts:
        hostname: $DIGITALOCEAN_HOST
    - script:
        name: pull latest image
        code: ssh root@$DIGITALOCEAN_HOST docker pull $DOCKER_USERNAME/$DOCKER_IMAGE:latest
    - script:
        name: stop running container
        code: ssh root@$DIGITALOCEAN_HOST docker stop rgapp || echo "failed to stop running container"
    - script:
        name: remove stopped container
        code: ssh root@$DIGITALOCEAN_HOST docker rm rgapp || echo "failed to remove stopped container"
    - script:
        name: remove image behind stopped container
        code: ssh root@$DIGITALOCEAN_HOST docker rmi -f $DOCKER_USERNAME/$DOCKER_IMAGE:latest || echo "failed to remove image behind stopped container"
    - script:
        name: run new container
        code: ssh root@$DIGITALOCEAN_HOST docker run -d -v /data/db_backup:/db_backup -p 80:8080 --env-file /usr/local/share/creds/aws.env --name rgapp $DOCKER_USERNAME/$DOCKER_IMAGE:latest
