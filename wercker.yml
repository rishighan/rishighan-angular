box: 
  id: frishi/docker-node
  username: $DOCKER_USERNAME
  password: $DOCKER_PASSWORD
  tag: 4.2.0
build:
  steps:
    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"
    # install deps
    - npm-install
    - script:
        name: bower install
        code: |
          npm i -g bower webpack
          bower i --config.interactive=false --allow-root
    # run tests
    #- npm-test
    
deploy:
  steps:
    - npm-install
    - script: 
        name: 'build distribution'
        code: cd /pipeline/source && webpack --config webpack.config.js
    - script:
        name: "install pm2"
        code: "npm i pm2 -g"
    - internal/docker-push:
      username: $DOCKER_USERNAME
      password: $DOCKER_PASSWORD
      repository: $DOCKER_USERNAME/$DOCKER_IMAGE
      ports: "8080"
      cmd: '/bin/bash -c "cd /pipeline/source && pm2 start --no-daemon --env production rgapp-pm2.json"'

    - add-ssh-key:
        keyname: DIGITALOCEAN
    - add-to-known_hosts:
        hostname: $DIGITALOCEAN_HOST
    - script:
        name: pull latest image
        code: ssh root@$DIGITALOCEAN_HOST docker pull $DOCKER_USERNAME/$DOCKER_IMAGE:latest
    - script:
        name: stop running container
        code: ssh root@$DIGITALOCEAN_HOST docker stop rgapp || echo "failed to stop running container"
    - script:
        name: remove stopped container
        code: ssh root@$DIGITALOCEAN_HOST docker rm rgapp || echo "failed to remove stopped container"
    - script:
        name: remove image behind stopped container
        code: ssh root@$DIGITALOCEAN_HOST docker rmi -f $DOCKER_USERNAME/$DOCKER_IMAGE:latest || echo "failed to remove image behind stopped container"
    - script:
        name: run new container
        code: ssh root@$DIGITALOCEAN_HOST docker run -d -v /data/db_backup:/db_backup -p 80:8080 --env-file /usr/local/share/creds/aws.env --name rgapp $DOCKER_USERNAME/$DOCKER_IMAGE:latest
